name: reusable release workflow prepare pull request action
description: get commit author; get new branch name; checkout and push new empty branch; git add; git commit; create pull request with inputs.reviewer

inputs:
  githubToken:
    description: github app token
    required: true
  releaseVersion:
    description: new release version
    required: true
  reviewerUsername:
    description: pull-request reviewer username
    required: true
  baseBranchName:
    description: base branch name - release or sync usually
    default: release
    required: false

runs:
  using: composite

  steps:
    - name: Create release branch
      shell: bash
      id: createReleaseBranchStep
      run: |
        set -e

        branch="${{ inputs.baseBranchName }}/${{ inputs.releaseVersion }}"
        git fetch origin
        git switch -c "$branch"
        git push origin "$branch"

        echo "branchName=$branch" >> "$GITHUB_OUTPUT"

    - uses: atls/shared/.github/actions/github/pull-request/get-last-author@master
      id: lastPrAuthorStep
      with:
        githubToken: ${{ inputs.githubToken }}

    - name: Commit changes
      uses: planetscale/ghcommit-action@v0.2.0
      env:
        GITHUB_TOKEN: ${{ inputs.githubToken }}
      with:
        branch: ${{ steps.createReleaseBranchStep.outputs.branchName }}
        repo: ${{ github.repository }}
        commit_message: 'feat(release): version'

    - uses: atls/shared/.github/actions/git/wait-available-branch@master
      with:
        branchToCheck: ${{ steps.createReleaseBranchStep.outputs.branchName }}

    - uses: atls/shared/.github/actions/github/pull-request/create@master
      with:
        targetDirectory: .
        githubToken: ${{ inputs.githubToken }}
        lastPrAuthor: ${{ steps.lastPrAuthorStep.outputs.lastPrAuthor }}
        prTitle: 'Bump version to ${{ inputs.releaseVersion }}'
        prBody: 'Automated version bump'
        commitMessage: 'feat(release): version'
        branchName: ${{ steps.createReleaseBranchStep.outputs.branchName }}
        reviewerUsername: ${{ inputs.reviewerUsername }}
